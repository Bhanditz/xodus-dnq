buildscript {
    ext.kotlin_version = '1.1.4'
    ext.exodus_version = '1.0.2763'
}

plugins {
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'org.jetbrains.kotlin.jvm' version '1.1.4'
    id 'io.codearte.nexus-staging' version '0.11.0'
    id 'idea'
}

idea {
    project {
        jdkName = '1.8'
        vcs = 'Git'
    }
    module {
        downloadSources = true
    }
}

apply from: 'publishing.gradle'

subprojects {
    apply plugin: 'license'
    apply plugin: 'java'
    apply plugin: 'kotlin'

    sourceCompatibility = 1.8
    group = 'com.jetbrains.xodus'
    version = (project.hasProperty("teamcity")) ? project.teamcity["build.number"] : 'dev'

    repositories {
        mavenCentral()
        maven { url 'http://repository.jetbrains.com/xodus' }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:1.1.4"
        compile 'io.github.microutils:kotlin-logging:1.4.1'

        testCompile 'junit:junit:4.12'
        testCompile 'org.slf4j:jcl-over-slf4j:1.7.21'
    }

    license {
        header rootProject.file('license/copyright.ftl')
        strictCheck true
        ext.inceptionYear = 2006
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.owner = 'JetBrains s.r.o.'
        include "**/*.kt"
        include "**/*.java"
        mapping {
            kt = 'JAVADOC_STYLE'
        }
    }

    test {
        minHeapSize = '512m'
        maxHeapSize = '512m'
        testLogging.showStandardStreams = true
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        duplicatesStrategy 'exclude'
        includeEmptyDirs false
        from project.sourceSets.main.java
        from project.sourceSets.main.kotlin
    }

    artifacts {
        archives jar, sourceJar
    }
}
